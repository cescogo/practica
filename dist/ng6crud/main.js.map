{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/adunit.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/index/index.component.css","webpack:///./src/app/components/index/index.component.html","webpack:///./src/app/components/index/index.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AdUnit } from './components/index/AdUnit';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdunitService {\n\n  uri = 'http://localhost:4000/adunits';\n\n  constructor(private http: HttpClient) { }\n\n  addAdUnit(unit_name, unit_price) {\n    const obj = {\n      unit_name: unit_name,\n      unit_price: unit_price\n    };\n    this.http.post(`${this.uri}/add`, obj)\n        .subscribe(res => console.log('Done'));\n  }\n\n  getAdUnits() {\n    return this\n           .http\n           .get(`${this.uri}`);\n}\n\neditAdUnit(id) {\n  return this\n            .http\n            .get(`${this.uri}/edit/${id}`);\n}\n\nupdateAdUnit(unit_name, unit_price, id) {\n\n  const obj = {\n    unit_name: unit_name,\n    unit_price: unit_price\n  };\n  this\n    .http\n    .post(`${this.uri}/update/${id}`, obj)\n    .subscribe(res => console.log('Done'));\n}\n\n  deleteAdUnit(id) {\n    return this\n              .http\n              .get(`${this.uri}/delete/${id}`);\n  }\n}\n","module.exports = \"\"","module.exports = \"<ng2-slim-loading-bar color=\\\"blue\\\"></ng2-slim-loading-bar>\\n<nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"create\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          Create Ad Units\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"index\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          All Ad Units\\n        </a>\\n      </li> \\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\nimport {SlimLoadingBarService} from 'ng2-slim-loading-bar';\nimport { NavigationCancel,\n  Event,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  constructor(private _loadingBar: SlimLoadingBarService, private _router: Router) {\n    this._router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this._loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this._loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this._loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this._loadingBar.stop();\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { EditComponent } from './components/edit/edit.component';\n\nimport { AdunitService } from './adunit.service';\n\nconst routes: Routes = [\n  {\n    path: 'create',\n    component: CreateComponent\n  },\n  {\n    path: 'edit/:id',\n    component: EditComponent\n  },\n  {\n    path: 'index',\n    component: IndexComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateComponent,\n    IndexComponent,\n    EditComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    SlimLoadingBarModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [ AdunitService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Unit Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"unit_name\\\" formControlName=\\\"unit_name\\\" #unit_name/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['unit_name'].invalid && (angForm.controls['unit_name'].dirty || angForm.controls['unit_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['unit_name'].errors.required\\\">\\n          Unit Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Unit Price</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"unit_price\\\" formControlName=\\\"unit_price\\\" #unit_price/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['unit_price'].invalid && (angForm.controls['unit_price'].dirty || angForm.controls['unit_price'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['unit_price'].errors.required\\\">\\n          Unit Price is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"addAdUnit(unit_name.value, unit_price.value)\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"btn btn-primary\\\">Create Unit</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { AdunitService } from '../../adunit.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  angForm: FormGroup;\n\n  constructor(private adunitservice: AdunitService, private fb: FormBuilder) { \n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      unit_name: ['', Validators.required ],\n      unit_price: ['', Validators.required ]\n   });\n  }\n\n  addAdUnit(unit_name, unit_price) {\n    this.adunitservice.addAdUnit(unit_name, unit_price);\n}\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Unit Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"unit_name\\\" formControlName=\\\"unit_name\\\" #unit_name [(ngModel)] = \\\"adunit.unit_name\\\"/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['unit_name'].invalid && (angForm.controls['unit_name'].dirty || angForm.controls['unit_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['unit_name'].errors.required\\\">\\n          Unit Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Unit Price</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"unit_price\\\" formControlName=\\\"unit_price\\\" #unit_price [(ngModel)] = \\\"adunit.unit_price\\\"/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['unit_price'].invalid && (angForm.controls['unit_price'].dirty || angForm.controls['unit_price'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['unit_price'].errors.required\\\">\\n          Unit Price is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"updateAdUnit(unit_name.value, unit_price.value)\\\" [disabled]=\\\"angForm.invalid\\\" class=\\\"btn btn-primary\\\">Update Unit</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { AdUnit } from '../index/AdUnit';\nimport { AdunitService } from '../../adunit.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  adunit: any = {};\n  angForm: FormGroup;\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private adunitservice: AdunitService,\n    private fb: FormBuilder) {\n      this.createForm();\n    }\n    createForm() {\n      this.angForm = this.fb.group({\n             unit_name: ['', Validators.required ],\n              unit_price: ['', Validators.required ]\n         });\n      }\n\n    updateAdUnit(unit_name, unit_price) {\n      this.route.params.subscribe(params => {\n          this.adunitservice.updateAdUnit(unit_name, unit_price, params['id']);\n          this.router.navigate(['index']);\n      });\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.adunitservice.editAdUnit(params['id']).subscribe(res => {\n          this.adunit = res;\n      });\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n      <td>Ad Unit Name</td>\\n      <td>Ad Unit Price</td>\\n      <td colspan=\\\"2\\\">Actions</td>\\n  </tr>\\n  </thead>\\n\\n  <tbody>\\n      <tr *ngFor=\\\"let adunit of adunits\\\">\\n          <td>{{ adunit.unit_name }}</td>\\n          <td>{{ adunit.unit_price }}</td>\\n          <td><a [routerLink]=\\\"['/edit', adunit._id]\\\" class=\\\"btn btn-primary\\\">Edit</a></td>\\n          <td><button (click)=\\\"deleteAdUnit(adunit._id)\\\"  class=\\\"btn btn-danger\\\">Delete</button></td>\\n      </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { AdUnit } from './AdUnit';\nimport { AdunitService } from '../../adunit.service';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n\n  adunits: AdUnit[];\n\n  constructor(private adunitservice: AdunitService) { }\n\n  deleteAdUnit(id) {\n    this.adunitservice.deleteAdUnit(id).subscribe(res => {\n      console.log('Deleted');\n    });\n  }\n\n  ngOnInit() {\n    this.adunitservice\n      .getAdUnits()\n      .subscribe((data: AdUnit[]) => {\n      this.adunits = data;\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}